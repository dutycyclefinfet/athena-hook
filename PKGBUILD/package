#!/usr/bin/env bash

pkgnames=(athena-hook)
url="https://github.com/dutycyclefinfet/athena-hook"
pkgver=$(<version)
timestamp=$(date +"%Y-%m-%dT%H:%M:%S%z")
pkgdesc="Athena hook"
section="utils"
maintainer="Lonely Transistor <lonelytransistor@protonmail.com>"
installdepends=(athena-linux openssh-keygen openssh-server procps-ng-ps inotifywait coreutils-df wget-ssl)
license=GPL-3.0-or-later
image=qt:v2.2.2
makedepends=()
conflicts=(rm2fb rm2fb-client display)
replaces=(rm2fb rm2fb-client display)

source=()
sha256sums=()

prepare() {
    git clone --depth 1 https://github.com/dutycyclefinfet/athena-hook "${srcdir}"
    
    RM2FB_CLIENT="https://github.com/ddvk/remarkable2-framebuffer/releases/download/v0.0.14/librm2fb_client.so.1.0.1"
    RM2FB_SERVER="https://github.com/ddvk/remarkable2-framebuffer/releases/download/v0.0.14/librm2fb_server.so.1.0.1"
    wget -q "${RM2FB_CLIENT}" -O "${srcdir}/root/librm2fb_client.so.1.0.1"
    wget -q "${RM2FB_SERVER}" -O "${srcdir}/root/librm2fb_server.so.1.0.1"
}

build() {
    cd Hook
    qmake
    make -j$(nproc)
}

configure() {
    if uname -r | grep athena > /dev/null ; then
        sed -i '/Environment=.*$/d' /lib/systemd/system/xochitl.service
        sed -i '/StartLimitInterval=.*$/d' /lib/systemd/system/xochitl.service
        sed -i '/OnFailure=.*$/d' /lib/systemd/system/xochitl.service
        sed -i '/WatchdogSec=.*$/d' /lib/systemd/system/xochitl.service
        systemctl daemon-reload
        systemctl enable adjust-epd
        systemctl enable rm2fb
        systemctl enable zram
        systemctl start sshdgenkeys
        systemctl enable sshd
        systemctl enable sshd-watchdog
        systemctl disable dropbear.socket
        
        bash -c "sleep 10 ; systemctl stop xochitl ; systemctl start rm2fb ; systemctl start xochitl ; systemctl stop dropbear.socket ; systemctl start sshd ; systemctl start sshd-watchdog" &
        disown
    fi
}

function _install() {
    if [ "$1" == "-r" ]; then
        (
            cd "${@:$#-1:1}"
            for f in $(find . -type f); do
                install -D "${@:2:$#-3}" "$f" "${@:$#}/$f"
            done
        )
    else
        install "$@"
    fi
}
package() {
    _install -r -m 644 -D "${srcdir}/OPKGPlugin" "${pkgdir}/home/root/.xochitlPlugins/AthenaOPKG"
    _install -r -m 644 -D "${srcdir}/CorePlugin/common" "${pkgdir}/home/root/.xochitlPlugins/.common"
    _install -r -m 644 -D "${srcdir}/CorePlugin/hook.qml" "${pkgdir}/usr/libexec/athenaXochitl"
    
    _install -m 755 -D "${srcdir}/Hook/libAthenaXochitl.so.1.0.0" "${pkgdir}/usr/libexec/libAthenaXochitl.so"
    _install -m 755 -D "${srcdir}/root/athenaHelper.sh" "${pkgdir}/usr/libexec/athenaHelper"
    
    _install -m 644 -D "${srcdir}/root/rm2fb.service" "${pkgdir}/lib/systemd/system/rm2fb.service"
    _install -m 644 -D "${srcdir}/root/adjust-epd.service" "${pkgdir}/lib/systemd/system/adjust-epd.service"
    _install -m 755 -D "${srcdir}/root/sshdgenkeys.service" "${pkgdir}/lib/systemd/system/sshdgenkeys.service"
    _install -m 755 -D "${srcdir}/root/sshd.service" "${pkgdir}/lib/systemd/system/sshd.service"
    _install -m 755 -D "${srcdir}/root/sshd-watchdog.service" "${pkgdir}/lib/systemd/system/sshd-watchdog.service"
    
    # /etc/ld.so.conf.d/ Add opt dirs
    _install -m 644 -D "${srcdir}/root/ld-opt.conf" "${pkgdir}/etc/ld.so.conf.d/opt.conf"
    
    # /etc/athena/usb_modes
    _install -m 644 -D "${srcdir}/root/usb_modes" "${pkgdir}/etc/athena/usb_modes"
    
    # /opt/bin/ rm2fb
    _install -m 755 -D "${srcdir}/root/rm2fb-client" "${pkgdir}/opt/bin/rm2fb-client"
    
    # /etc/systemd/system/multi-user.target.wants/ Install initial services
    mkdir -p "${pkgdir}"/etc/systemd/system/multi-user.target.wants/
    ln -s /lib/systemd/system/rm2fb.service "${pkgdir}/etc/systemd/system/multi-user.target.wants/rm2fb.service"
    ln -s /lib/systemd/system/adjust-epd.service "${pkgdir}/etc/systemd/system/multi-user.target.wants/adjust-epd.service"
    ln -s /lib/systemd/system/sshd.service "${pkgdir}/etc/systemd/system/multi-user.target.wants/sshd.service"
    ln -s /lib/systemd/system/sshd-watchdog.service "${pkgdir}/etc/systemd/system/multi-user.target.wants/sshd-watchdog.service"
    
    # /etc/systemd/system/ Create units.d -> athena.conf
    mkdir -p "${pkgdir}"/etc/systemd/system/{multi-user.target.wants,draft.service.d,remux.service.d,tarnish.service.d,xochitl.service.d}/
    ln -s /etc/environments.d/athena.conf "${pkgdir}/etc/systemd/system/draft.service.d/athena.conf"
    ln -s /etc/environments.d/athena.conf "${pkgdir}/etc/systemd/system/remux.service.d/athena.conf"
    ln -s /etc/environments.d/athena.conf "${pkgdir}/etc/systemd/system/tarnish.service.d/athena.conf"
    ln -s /etc/environments.d/athena.conf "${pkgdir}/etc/systemd/system/xochitl.service.d/athena.conf"
    
    # /etc/environments.d Create initial 2 configs
    _install -m 644 -D "${srcdir}/root/athena.conf" "${pkgdir}/etc/environments.d/athena.conf"
    _install -m 644 -D "${srcdir}/root/rm2fb-client.env" "${pkgdir}/etc/environments.d/rm2fb-client.env"
    _install -m 644 -D "${srcdir}/root/xochitl.env" "${pkgdir}/etc/environments.d/xochitl.env"
    ln -s rm2fb-client.env "${pkgdir}/etc/environments.d/draft.service"
    ln -s rm2fb-client.env "${pkgdir}/etc/environments.d/remux.service"
    ln -s rm2fb-client.env "${pkgdir}/etc/environments.d/tarnish.service"
    ln -s xochitl.env "${pkgdir}/etc/environments.d/xochitl.service"
    
    # /opt/lib/ rm2fb
    _install -m 755 -D "${srcdir}/root/librm2fb_client.so.1.0.1" "${pkgdir}/opt/lib/librm2fb_client.so.1.0.1"
    _install -m 755 -D "${srcdir}/root/librm2fb_server.so.1.0.1" "${pkgdir}/opt/lib/librm2fb_server.so.1.0.1"
    ln -s /opt/lib/librm2fb_client.so.1.0.1 "${pkgdir}/opt/lib/librm2fb_client.so"
    ln -s /opt/lib/librm2fb_client.so.1.0.1 "${pkgdir}/opt/lib/librm2fb_client.so.1"
    ln -s /opt/lib/librm2fb_client.so.1.0.1 "${pkgdir}/opt/lib/librm2fb_client.so.1.0"
    ln -s /opt/lib/librm2fb_server.so.1.0.1 "${pkgdir}/opt/lib/librm2fb_server.so"
    ln -s /opt/lib/librm2fb_server.so.1.0.1 "${pkgdir}/opt/lib/librm2fb_server.so.1"
    ln -s /opt/lib/librm2fb_server.so.1.0.1 "${pkgdir}/opt/lib/librm2fb_server.so.1.0"
    
    # /usr/lib/ rm2fb
    _install -d "${pkgdir}/usr/lib"
    ln -s /opt/lib/librm2fb_client.so.1.0.1 "${pkgdir}/usr/lib/librm2fb_client.so.1"
    ln -s /opt/lib/librm2fb_client.so.1.0.1 "${pkgdir}/usr/lib/librm2fb_client.so.1.0"
    ln -s /opt/lib/librm2fb_client.so.1.0.1 "${pkgdir}/usr/lib/librm2fb_client.so.1.0.1"
    ln -s /opt/lib/librm2fb_server.so.1.0.1 "${pkgdir}/usr/lib/librm2fb_server.so.1"
    ln -s /opt/lib/librm2fb_server.so.1.0.1 "${pkgdir}/usr/lib/librm2fb_server.so.1.0"
    ln -s /opt/lib/librm2fb_server.so.1.0.1 "${pkgdir}/usr/lib/librm2fb_server.so.1.0.1"
    
    # /usr/bin/ wget-ssl
    _install -d "${pkgdir}/usr/bin"
    ln -s /opt/bin/wget "${pkgdir}/usr/bin/wget"
}
